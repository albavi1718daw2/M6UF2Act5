package actividad5;

/**
 *
 * @author bazag
 */
public class Juego extends javax.swing.JFrame {

    int filaOrigen, columnaOrigen;
    boolean juegaX, juegaO;
    
    /**
     * Creates new form Juego
     */
    public Juego() {
        initComponents();
        filaOrigen = -1;
        columnaOrigen = -1;
        juegaX = true;
        juegaO = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lError = new java.awt.Label();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtGame = new javax.swing.JTable();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("SORTIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jtGame.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "O", null, "O", null, "O", null, "O"},
                {"O", null, "O", null, "O", null, "O", null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, "X", null, "X", null, "X", null, "X"},
                {"X", null, "X", null, "X", null, "X", null}
            },
            new String [] {
                "Col 1", "Col 2", "Col 3", "Col 4", "Col 5", "Col 6", "Col 7", "Col 8"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtGameMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtGame);
        if (jtGame.getColumnModel().getColumnCount() > 0) {
            jtGame.getColumnModel().getColumn(0).setResizable(false);
            jtGame.getColumnModel().getColumn(1).setResizable(false);
            jtGame.getColumnModel().getColumn(2).setResizable(false);
            jtGame.getColumnModel().getColumn(3).setResizable(false);
            jtGame.getColumnModel().getColumn(4).setResizable(false);
            jtGame.getColumnModel().getColumn(5).setResizable(false);
            jtGame.getColumnModel().getColumn(6).setResizable(false);
            jtGame.getColumnModel().getColumn(7).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lError, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        new Inicio().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtGameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtGameMouseClicked
        
        // Cogemos los valores de la fila y la columna
        int fila = obtenerFila();
        int columna = obtenerColumna();

        if (noHayOrigen()) { 
            
            if (juegaX && esX(fila,columna)) {
                
                actualizaNuevoOrigen(fila,columna);
                
            } else if (juegaO && esO(fila,columna)) {
                
                actualizaNuevoOrigen(fila,columna);
                
            } else {
                
                error();
            }
            
        } else if (movimientoValido(fila,columna)) {
            
            if (esVacio(fila,columna) || ocupadoContrario(fila,columna)) {
                
                mover(fila,columna);
            }
            
        } else if (ocupadoPropio(fila,columna)) {
            
            actualizaNuevoOrigen(fila,columna);
            
        } else {
            
            error();
        }
    }//GEN-LAST:event_jtGameMouseClicked

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Juego().setVisible(true);
            }
        });
    }

    public int obtenerFila() {
        return jtGame.getSelectedRow();
    }

    public int obtenerColumna() {
        lError.setText("");
        return jtGame.getSelectedColumn();
    }

    public boolean noHayOrigen() {
        return (filaOrigen == -1);
    }

    public boolean esX(int fila, int columna) {
        return ((jtGame.getValueAt(fila, columna) != null) && (jtGame.getValueAt(fila, columna).equals("X")));
    }

    public boolean esO(int fila, int columna) {
        return ((jtGame.getValueAt(fila, columna) != null) && (jtGame.getValueAt(fila, columna).equals("O")));
    }

    public void actualizaNuevoOrigen(int fila, int columna) {
        filaOrigen = fila;
        columnaOrigen = columna;
    }

    public boolean movimientoValido(int fila, int columna) {
        if (juegaX) {

             return (((filaOrigen - 1) == fila && (columnaOrigen + 1) == columna) || ((filaOrigen - 1) == fila && (columnaOrigen - 1) == columna));

        } else {

             return (((filaOrigen + 1) == fila && (columnaOrigen - 1) == columna) || ((filaOrigen + 1) == fila && (columnaOrigen + 1) == columna));
        }
    }

    public boolean esVacio(int fila, int columna) {
        Object valor = jtGame.getValueAt(fila, columna);
        return (valor == null);
    }

    public boolean ocupadoPropio(int fila, int columna) {
        if (juegaX) {
            
            return ((jtGame.getValueAt(fila, columna) != null) && jtGame.getValueAt(fila, columna).equals("O"));
            
        } else {
            
            return ((jtGame.getValueAt(fila, columna)!= null) && jtGame.getValueAt(fila, columna).equals("X"));
        }
    }

    private boolean ocupadoContrario(int fila, int columna) {

        if (juegaX) {

            return (jtGame.getValueAt(fila, columna).equals("O"));

        } else {

            return (jtGame.getValueAt(fila, columna).equals("X"));
        }
    }

    public void error() {
        lError.setText("Eror en el movimiento.");
    }

    private void mover(int fila, int columna) {

        // Elegimos el tipo de ficha
        String ficha = juegaO ? "O" : "X";

        // La seteamos y cambiamos el valor de origen
        jtGame.setValueAt(ficha, fila, columna);
        jtGame.setValueAt(null, filaOrigen, columnaOrigen);

        // Ponemos todo tal y como estaba antes de realizar el movimiento
        filaOrigen = -1;
        columnaOrigen = -1;
        if (juegaX) {
            juegaX = false;
            juegaO = true;
        } else {
            juegaX = true;
            juegaO = false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable jtGame;
    private java.awt.Label lError;
    // End of variables declaration//GEN-END:variables
}
